0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.14.2
3 info using node@v4.0.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/markogrady1/Documents/code/Javascript/easy-mongoJS',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/markogrady1/.npm/easy-mongoJS/0.0.1/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/markogrady1/.npm/easy-mongoJS/0.0.1/package.tgz',
9 verbose tar pack   '/Users/markogrady1/Documents/code/Javascript/easy-mongoJS' ]
10 verbose tarball /Users/markogrady1/.npm/easy-mongoJS/0.0.1/package.tgz
11 verbose folder /Users/markogrady1/Documents/code/Javascript/easy-mongoJS
12 info prepublish easy-mongoJS@0.0.1
13 verbose addLocalTarball adding from inside cache /Users/markogrady1/.npm/easy-mongoJS/0.0.1/package.tgz
14 silly cache afterAdd easy-mongoJS@0.0.1
15 verbose afterAdd /Users/markogrady1/.npm/easy-mongoJS/0.0.1/package/package.json not in flight; writing
16 verbose afterAdd /Users/markogrady1/.npm/easy-mongoJS/0.0.1/package/package.json written
17 silly publish { name: 'easy-mongoJS',
17 silly publish   version: '0.0.1',
17 silly publish   description: 'Simple mongodb adapter',
17 silly publish   main: 'src/index.js',
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/markogrady1/easy-mongoJS.git' },
17 silly publish   author:
17 silly publish    { name: 'Mark O Grady',
17 silly publish      email: 'markogrady18@gmail.com',
17 silly publish      url: 'http://www.thereformat.com' },
17 silly publish   dependencies: { mongodb: '^2.0.26', underscore: '^1.8.3' },
17 silly publish   devDependencies: { mocha: '^2.2.4', should: '^5.2.0', supertest: '^0.15.0' },
17 silly publish   readme: '#easy-mongoJS  \r\n\r\n\r\n##Making the use of MongoDB very simple. \r\n    \r\n**Implementation Requirements**   \r\n     \r\n - [NodeJS] [node-requirements]\r\n - [MongoDB] [mongodb-requirements] \r\n \r\n\r\nand your ready to go...\r\n\r\n**Implementation**   \r\nTerminal   \r\n```bash\r\n$ npm install easy-mongoJS --save\r\n```\r\nJavascript file\r\n```javascript\r\nvar mgo = require(\'easy-mongoJS\');\r\n\r\n\r\n```\r\n\r\nGet an array of users  \r\nCreate an object to hold the collection name, projection and query\r\n\r\n```javascript\r\nvar param = {\r\n\tcollection: "registered",\r\n\tquery: { \r\n\t\t"firstname": 1,\r\n\t\t"lastname": 1, \r\n\t\t"email": 1, \r\n\t\t"_id": 0 \r\n\t},\r\n\tprojection: {}\r\n}\r\n\r\n```\r\nAnd simply call the following function and pass your `param` object into the `getRecordArray` function\r\n\r\n```javascript\r\nmgo.getConnection(\'users\',  function(db) {\r\n\tmgo.getRecordArray(db, param, function(doc) {\r\n\t\tconsole.log(doc);\r\n\t});\r\n})\r\n```\r\nThe above construct does two things:\r\n- connects to the database. \r\n- uses the connection to retrieve a required set of data\r\n\r\n\r\nOther examples are :\r\nGet an array of records/documents returned one at a time.\r\n```javascript\r\nmgo.getConnection(\'users\',  function(db) {\r\n\tmgo.getEachRecord(db, param, function(doc) {\r\n\t  console.log(doc);\r\n \t});\r\n})\r\n```\r\nGet a single record/document\r\n```javascript\r\nmgo.getConnection(\'users\', function(db) {\r\n \tmgo.getOneRecord(db, param, function(doc) {\r\n \t\tconsole.log(doc);\r\n \t});\r\n})\r\n```\r\n\r\nInsert a record/document\r\n```javascript\r\n//create an object to insert into function\r\nvar userObj = {\r\n\tcollection: "registered",\r\n\trecord: { \r\n\t\t"firstname": "Bob",\r\n\t\t"lastname": "Bar",\r\n\t\t"email": "bob@someplace.com"\r\n\t}\r\n}\r\n\r\nmgo.getConnection(\'users\',  function(db) {\r\n  mgo.insertOneRecord(db, userObj, function(result) {\r\n \t  console.log(result);\r\n  })\r\n});\r\n```\r\n\r\nEdit configuration:\r\nSimply change the port or host.\r\n\r\n```javascript\r\n//  /config/dbConfig.js\r\nvar config = module.exports = {\r\n\tmdb: "mongodb://",\r\n\tmhost: "127.0.0.1",\r\n\tmport: ":27017/"\r\n};\r\n```\r\n[requirements]: https://github.com/jquery/content/issues/4  \r\n[node-requirements]: https://nodejs.org/\r\n[mongodb-requirements]: https://www.mongodb.org/\r\n[npm-requirements]: https://docs.npmjs.com/getting-started/installing-node\r\n[homebrew-requirements]: http://brew.sh/\r\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: 'b8409ede425b2b58709ac00989f5c4bb7ff05dac',
17 silly publish   bugs: { url: 'https://github.com/markogrady1/easy-mongoJS/issues' },
17 silly publish   homepage: 'https://github.com/markogrady1/easy-mongoJS#readme',
17 silly publish   _id: 'easy-mongoJS@0.0.1',
17 silly publish   scripts: {},
17 silly publish   _shasum: '6112b39433949100d1e46071973b08b53d54ea96',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name easy-mongoJS
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/easy-mongoJS
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/markogrady1/.npm/easy-mongoJS/0.0.1/package.tgz
25 verbose request uri https://registry.npmjs.org/easy-mongoJS
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 6:06:38 PM
28 verbose request using bearer token for auth
29 verbose request id cc49605794475d75
30 http request PUT https://registry.npmjs.org/easy-mongoJS
31 http 400 https://registry.npmjs.org/easy-mongoJS
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '54',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Fri, 11 Sep 2015 17:06:39 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-lhr6325-LHR',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1441991198.304709,VS0,VE1087' }
33 verbose request invalidating /Users/markogrady1/.npm/registry.npmjs.org/easy-mongoJS on PUT
34 error publish Failed PUT 400
35 verbose stack Error: name can no longer contain capital letters : easy-mongoJS
35 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:263:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:251:14)
35 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:171:14)
35 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1073:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1019:12)
36 verbose statusCode 400
37 verbose pkgid easy-mongoJS
38 verbose cwd /Users/markogrady1/Documents/code/Javascript/easy-mongoJS
39 error Darwin 14.3.0
40 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
41 error node v4.0.0
42 error npm  v2.14.2
43 error code E400
44 error name can no longer contain capital letters : easy-mongoJS
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
